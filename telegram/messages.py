from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from datetime import datetime

# ---------- –¢–µ–∫—Å—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã ----------

def get_welcome_text() -> str:
    return (
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –∫–æ–ø–∏—Ç—Ä–µ–π–¥–∏–Ω–≥–∞.\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–ø—Ä–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–º:\n"
        "‚Ä¢ üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫\n"
        "‚Ä¢ ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏\n"
        "‚Ä¢ üìÇ –û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏\n"
        "‚Ä¢ üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
    )

def get_settings_text() -> str:
    return (
        "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞:\n\n"
        "‚Ä¢ –ò–∑–º–µ–Ω–∏—Ç—å —Ç–æ—Ä–≥–æ–≤—É—é —Å–µ—Ç—å (mainnet/testnet/demo)\n"
        "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∏—Å–∫–∞ –∏ –ª–æ—Ç–Ω–æ—Å—Ç–∏\n"
        "‚Ä¢ –£–ø—Ä–∞–≤–ª—è—Ç—å Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –≤—ã–±–æ—Ä–∞."
    )

def get_positions_text() -> str:
    return "üìÇ –û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã –∑–¥–µ—Å—å (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)."

def _fmt_dt(dt_iso: str | None) -> str:
    if not dt_iso:
        return "‚Äî"
    try:
        dt = datetime.fromisoformat(dt_iso.replace("Z", "+00:00"))
        return dt.strftime("%Y-%m-%d %H:%M:%S UTC")
    except Exception:
        return dt_iso

def build_stats_text(
    master_env: str,
    follower_env: str,
    master_balance: float,
    follower_balance: float,
    summary: dict,
    currency: str = "USDT",
) -> str:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç –∫—Ä–∞—Å–∏–≤—ã–π –±–ª–æ–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏, –≤–∫–ª—é—á–∞—è –±–∞–ª–∞–Ω—Å—ã –º–∞—Å—Ç–µ—Ä–∞/–ø–æ–¥–ø–∏—Å—á–∏–∫–∞.
    """
    open_cnt = summary.get("open_count", 0)
    closed_cnt = summary.get("closed_count", 0)
    updated_at = _fmt_dt(summary.get("updated_at"))

    return (
        "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞</b>\n\n"
        f"üë§ <b>–ú–∞—Å—Ç–µ—Ä</b> [{master_env}] ‚Äî –±–∞–ª–∞–Ω—Å: <code>{master_balance:,.2f} {currency}</code>\n"
        f"ü§ñ <b>–ü–æ–¥–ø–∏—Å—á–∏–∫</b> [{follower_env}] ‚Äî –±–∞–ª–∞–Ω—Å: <code>{follower_balance:,.2f} {currency}</code>\n"
        "\n"
        f"üìå –û—Ç–∫—Ä—ã—Ç—ã—Ö —Å–¥–µ–ª–æ–∫: <b>{open_cnt}</b>\n"
        f"üì¶ –ó–∞–∫—Ä—ã—Ç—ã—Ö —Å–¥–µ–ª–æ–∫: <b>{closed_cnt}</b>\n"
        f"üïí –û–±–Ω–æ–≤–ª–µ–Ω–æ: <i>{updated_at}</i>\n"
    )

def get_stats_loading_text() -> str:
    return "‚è≥ –°–æ–±–∏—Ä–∞—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –±–∞–ª–∞–Ω—Å—ã‚Ä¶"

# ---------- –ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ (ReplyKeyboard) ----------

def main_menu_kb() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text="üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫"),
                KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
            ],
            [
                KeyboardButton(text="üìÇ –û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏"),
                KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"),
            ],
        ],
        resize_keyboard=True,
        one_time_keyboard=False,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ‚Ä¶",
    )

# ---------- –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ (InlineKeyboard) ----------

def settings_inline_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üåê –¢–æ—Ä–≥–æ–≤–∞—è —Å–µ—Ç—å", callback_data="settings:set_net")],
        [InlineKeyboardButton(text="üõ°Ô∏è –†–∏—Å–∫ –∏ –ª–æ—Ç–Ω–æ—Å—Ç—å", callback_data="settings:set_risk")],
        [InlineKeyboardButton(text="üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="settings:set_alerts")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="settings:back")],
    ])

def settings_net_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="demo (–±—É–º–∞–∂–Ω–∞—è)", callback_data="settings:net:demo")],
        [InlineKeyboardButton(text="testnet", callback_data="settings:net:testnet")],
        [InlineKeyboardButton(text="mainnet", callback_data="settings:net:mainnet")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="settings:back")],
    ])

def settings_risk_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å MAX_RISK_PCT", callback_data="settings:risk:max_risk")],
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å TEST_MODE", callback_data="settings:risk:test_mode")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="settings:back")],
    ])

def settings_alerts_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–í–∫–ª/–í—ã–∫–ª –æ–ø–æ–≤–µ—â–µ–Ω–∏—è", callback_data="settings:alerts:toggle")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="settings:back")],
    ])
